Περιγραφή
Η εργασία αποσκοπεί στην ανάπτυξη μιας εφαρμογής κινητού που επιτρέπει στους χρήστες να κάνουν κρατήσεις τραπεζιών σε εστιατόρια. Η εργασία απαιτεί τη συνεργασία και τον συνδυασμό frontend, backend και βάσης δεδομένων, ώστε οι φοιτητές να κατανοήσουν τις βασικές αρχές λειτουργίας ενός κατανεμημένου συστήματος.

Απαιτήσεις Εργασίας
Frontend (React Native)
•	Δημιουργία εφαρμογής με React Native.
•	Υλοποίηση των εξής λειτουργιών:
o	Εγγραφή και Σύνδεση Χρήστη:
	Ο χρήστης πρέπει να μπορεί να εγγραφεί με email και password.
	Η σύνδεση πρέπει να χρησιμοποιεί authentication token (JWT).
o	Προβολή Λίστας Εστιατορίων:
	Εμφάνιση λίστας διαθέσιμων εστιατορίων από το backend.
	Δυνατότητα αναζήτησης εστιατορίων με βάση την τοποθεσία ή το όνομα.
o	Φόρμα Κράτησης:
	Επιλογή ημερομηνίας, ώρας και αριθμού ατόμων.
	Αποστολή της κράτησης στο backend.
o	Προφίλ Χρήστη:
	Προβολή ιστορικού κρατήσεων του χρήστη.
	Διαγραφή ή τροποποίηση μελλοντικών κρατήσεων.
Backend (Node.js & Express)
•	Δημιουργία REST API που να περιλαμβάνει:
o	Endpoints:
	/register: Δημιουργία νέου χρήστη.
	/login: Επιστροφή authentication token.
	/restaurants: Επιστροφή λίστας εστιατορίων.
	/reservations: Δημιουργία, τροποποίηση, ή διαγραφή κράτησης.
	/user/reservations: Επιστροφή κρατήσεων συγκεκριμένου χρήστη.
o	Middleware:
	Χρήση JWT για έλεγχο ταυτότητας.
o	Σύνδεση με Βάση Δεδομένων:
	Επικοινωνία με MariaDB για ανάκτηση και αποθήκευση δεδομένων.
Database (MariaDB)
•	Δημιουργία βάσης δεδομένων με τα εξής (ενδεικτικά):
o	Πίνακας Χρηστών:
	user_id, name, email, password (hashed).
o	Πίνακας Εστιατορίων:
	restaurant_id, name, location, description.
o	Πίνακας Κρατήσεων:
	reservation_id, user_id, restaurant_id, date, time, people_count.

Οδηγίες Υλοποίησης
Εργαλεία
•	IDE: Προτείνεται το NetBeans λόγω της ευκολίας του στην ολοκληρωμένη ανάπτυξη εφαρμογών με Node.js (μέσω plugins) και MariaDB.
•	Γλώσσες: JavaScript (React Native & Node.js), SQL.
•	Πλατφόρμες:
o	React Native για το frontend.
o	Node.js για το backend.
o	MariaDB για τη βάση δεδομένων.
•	Λοιπά Εργαλεία:
o	Postman για δοκιμή των REST API endpoints.
o	GitHub για αποθετήριο και version control.

Κριτήρια Αξιολόγησης
Υλοποίηση (70%)
1.	Frontend (30%)
o	UI/UX: Καθαρό και λειτουργικό περιβάλλον χρήστη.
	10%: Οπτική ομοιομορφία και χρήση βασικών κανόνων σχεδιασμού UI/UX.
o	Λειτουργικότητα:
	15%: Σωστή επικοινωνία με το backend για εγγραφή/σύνδεση, προβολή εστιατορίων και διαχείριση κρατήσεων.
	5%: Υποστήριξη ανατροφοδότησης χρήστη (π.χ., επιτυχία ή αποτυχία αιτημάτων).
2.	Backend (20%)
o	Αρχιτεκτονική:
	10%: Ορθή δομή κώδικα, καθαρός διαχωρισμός routes, controllers και services.
o	API Endpoints:
	5%: Υποστήριξη ασφαλείας (JWT).
	5%: Ομαλή διασύνδεση με τη βάση δεδομένων.
3.	Database (20%)
o	Δομή:
	10%: Καλά σχεδιασμένοι πίνακες με σωστές σχέσεις (primary/foreign keys).
o	Ερωτήματα:
	10%: Αποτελεσματική εκτέλεση ερωτημάτων CRUD.
Παρουσίαση (30%)
1.	Περιεχόμενο (20%):
o	Σαφής περιγραφή στόχου της εφαρμογής (5%).
o	Παρουσίαση της αρχιτεκτονικής (5%).
o	Δείγματα χρήσης (screenshots ή live demo) (10%).
2.	Δεξιότητες Παρουσίασης (10%):
o	Χρήση οπτικών βοηθημάτων (π.χ., PowerPoint) (5%).
o	Οργανωμένη και επαγγελματική παρουσίαση (5%).

Παραδοτέα
1.	Κώδικας:
o	Ανεβασμένος σε αποθετήριο GitHub με README που περιλαμβάνει:
	Οδηγίες εγκατάστασης.
	Περιγραφή λειτουργικότητας.
2.	Παρουσίαση PowerPoint:
o	Μέγιστος αριθμός διαφανειών: 12.
o	Μέγιστος χρόνος παρουσίασης: 10 λεπτά.

Χρονοδιάγραμμα
1.	Εβδομάδα 1-2: Ανάλυση απαιτήσεων και σχεδιασμός βάσης δεδομένων.
2.	Εβδομάδα 3-7: Ανάπτυξη backend και βασικών API endpoints.
3.	Εβδομάδα 8-11: Δημιουργία frontend και διασύνδεση με backend.
4.	Εβδομάδα 12: Παράδοση τελικού έργου και παρουσίασης.
